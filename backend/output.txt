AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "add_numbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    null
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings"
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T21:56:55.334Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-01T21:56:55.334Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-01T21:56:55.334Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-01T21:56:55.334Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T21:56:55.334Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-01T21:56:55.334Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-01T21:56:55.334Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray"
    },
    {
      "type": "VariableDeclaration",
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-01T21:56:55.335Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-01T21:56:55.336Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-01T21:56:55.336Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-01T21:56:55.336Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-01T21:56:55.336Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.336Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-01T21:56:55.385Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-01T21:56:55.385Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "stringValue"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T21:56:55.409Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-01T21:56:55.409Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-01T21:56:55.410Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T21:56:55.410Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T21:56:55.410Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T21:56:55.410Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-01T21:56:55.414Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T21:56:55.414Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-01T21:56:55.415Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T21:56:55.415Z",
      "description": "Set variable len to 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T21:56:55.417Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T21:56:55.417Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T21:56:55.418Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T21:56:55.418Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-01T21:56:55.419Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.419Z",
      "description": "Set variable len to 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T21:56:55.420Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.420Z",
      "description": "Set variable len to 10."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "message",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": {
                "type": "Identifier",
                "value": "a",
                "line": 5
              },
              "operator": ">",
              "right": {
                "type": "NumberLiteral",
                "value": "20",
                "line": 5
              },
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "message",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "a",
                      "line": 7
                    },
                    "operator": "<=",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "20",
                      "line": 7
                    },
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 11
            }
          ],
          "line": 11
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "message",
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 11,
          "otherwiseLine": 11,
          "condition": {
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": "a",
              "operator": ">",
              "right": "20"
            }
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "message",
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 7,
              "endLine": 11,
              "otherwiseLine": 10,
              "condition": {
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": "a",
                    "operator": "<=",
                    "right": "20"
                  }
                }
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T21:56:55.422Z",
      "description": "Set variable a to 25."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T21:56:55.422Z",
      "description": "Set variable b to true."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a > 50",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.422Z",
      "description": "Checked if a > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "b && a > 20",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.422Z",
      "description": "Checked if b && a > 20."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "message",
      "type": "string",
      "value": "a is greater than 20 and b is true",
      "timestamp": "2024-09-01T21:56:55.422Z",
      "description": "Set variable message to a is greater than 20 and b is true."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.422Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.424Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.424Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.424Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.424Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-01T21:56:55.424Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-01T21:56:55.424Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-01T21:56:55.424Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-01T21:56:55.424Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-01T21:56:55.424Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.424Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T21:56:55.426Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.426Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.426Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.426Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-01T21:56:55.426Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-01T21:56:55.426Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.426Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-01T21:56:55.428Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.428Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.428Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.428Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T21:56:55.429Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.429Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.429Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-01T21:56:55.429Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-01T21:56:55.429Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-01T21:56:55.429Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.429Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.430Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.430Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-01T21:56:55.430Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.430Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T21:56:55.432Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.432Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.432Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-01T21:56:55.432Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.432Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.432Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.434Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.434Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T21:56:55.434Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.434Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.436Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.436Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.436Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.436Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T21:56:55.436Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.436Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.454Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.454Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.454Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-01T21:56:55.454Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.454Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.457Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T21:56:55.457Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.460Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.460Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T21:56:55.460Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.463Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-01T21:56:55.463Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-01T21:56:55.466Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-01T21:56:55.466Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.469Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T21:56:55.469Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-01T21:56:55.471Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.471Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-01T21:56:55.471Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.471Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.473Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-01T21:56:55.473Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.474Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-01T21:56:55.474Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-01T21:56:55.475Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.475Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-01T21:56:55.475Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.477Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-01T21:56:55.477Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.477Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.480Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-01T21:56:55.480Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-01T21:56:55.480Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-01T21:56:55.493Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-01T21:56:55.493Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-01T21:56:55.493Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.496Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-01T21:56:55.496Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-01T21:56:55.496Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.498Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T21:56:55.498Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T21:56:55.498Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T21:56:55.498Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T21:56:55.498Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.499Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T21:56:55.499Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-01T21:56:55.499Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.499Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.499Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T21:56:55.500Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.500Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.500Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.500Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-01T21:56:55.500Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.502Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T21:56:55.502Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T21:56:55.502Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.504Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T21:56:55.504Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T21:56:55.506Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T21:56:55.506Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.506Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-01T21:56:55.506Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.506Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.508Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.510Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T21:56:55.513Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.513Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.513Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.513Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-01T21:56:55.513Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.513Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.513Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.515Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.515Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.515Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-01T21:56:55.515Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.515Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.515Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.520Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T21:56:55.520Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.520Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.520Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-01T21:56:55.520Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.520Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-01T21:56:55.520Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.520Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.520Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.520Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T21:56:55.522Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.522Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.522Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-01T21:56:55.522Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.522Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.522Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-01T21:56:55.529Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-01T21:56:55.529Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-01T21:56:55.529Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-01T21:56:55.529Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T21:56:55.531Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.531Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.531Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T21:56:55.533Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.533Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-01T21:56:55.533Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.533Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T21:56:55.534Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T21:56:55.535Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.535Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-01T21:56:55.535Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.535Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T21:56:55.536Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T21:56:55.536Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.536Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-01T21:56:55.536Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.536Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T21:56:55.537Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T21:56:55.537Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T21:56:55.539Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T21:56:55.539Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.539Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.539Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.541Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T21:56:55.541Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T21:56:55.543Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.546Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T21:56:55.546Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.546Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.546Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-09-01T21:56:55.546Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.552Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-01T21:56:55.553Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-01T21:56:55.555Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T21:56:55.556Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T21:56:55.559Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.562Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T21:56:55.563Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T21:56:55.564Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T21:56:55.566Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false,
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.570Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.570Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T21:56:55.570Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.570Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-01T21:56:55.570Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-01T21:56:55.570Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-01T21:56:55.570Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.571Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.572Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.572Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T21:56:55.572Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.572Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T21:56:55.574Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T21:56:55.575Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-01T21:56:55.575Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-01T21:56:55.575Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-01T21:56:55.575Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.580Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.580Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.580Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.580Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-01T21:56:55.580Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.580Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T21:56:55.580Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.581Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T21:56:55.581Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.585Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.585Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T21:56:55.585Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T21:56:55.589Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T21:56:55.589Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-01T21:56:55.589Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T21:56:55.591Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T21:56:55.591Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-01T21:56:55.591Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.595Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-09-01T21:56:55.595Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T21:56:55.596Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.596Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-01T21:56:55.596Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T21:56:55.600Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-01T21:56:55.602Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T21:56:55.602Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-01T21:56:55.602Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "add_numbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    null
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings"
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:29:22.819Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-01T22:29:22.819Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-01T22:29:22.819Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-01T22:29:22.821Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:29:22.821Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-01T22:29:22.821Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-01T22:29:22.822Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray"
    },
    {
      "type": "VariableDeclaration",
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-01T22:29:22.823Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-01T22:29:22.823Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-01T22:29:22.823Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-01T22:29:22.823Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-01T22:29:22.823Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:22.824Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-01T22:29:22.828Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-01T22:29:22.828Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "stringValue"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:29:22.833Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-01T22:29:22.833Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-01T22:29:22.834Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:29:22.834Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:29:22.838Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:29:22.838Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-01T22:29:22.841Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:29:22.841Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-01T22:29:22.846Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:22.846Z",
      "description": "Set variable len to 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:29:22.848Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:29:22.848Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:29:22.849Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:29:22.850Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-01T22:29:22.851Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:22.851Z",
      "description": "Set variable len to 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:29:22.855Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:22.856Z",
      "description": "Set variable len to 10."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "message",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": {
                "type": "Identifier",
                "value": "a",
                "line": 5
              },
              "operator": ">",
              "right": {
                "type": "NumberLiteral",
                "value": "20",
                "line": 5
              },
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "message",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "a",
                      "line": 7
                    },
                    "operator": "<=",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "20",
                      "line": 7
                    },
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 11
            }
          ],
          "line": 11
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "message",
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 11,
          "otherwiseLine": 11,
          "condition": {
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": "a",
              "operator": ">",
              "right": "20"
            }
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "message",
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 7,
              "endLine": 11,
              "otherwiseLine": 10,
              "condition": {
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": "a",
                    "operator": "<=",
                    "right": "20"
                  }
                }
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:29:22.859Z",
      "description": "Set variable a to 25."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:22.859Z",
      "description": "Set variable b to true."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a > 50",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.859Z",
      "description": "Checked if a > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "b && a > 20",
      "result": true,
      "timestamp": "2024-09-01T22:29:22.863Z",
      "description": "Checked if b && a > 20."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "message",
      "type": "string",
      "value": "a is greater than 20 and b is true",
      "timestamp": "2024-09-01T22:29:22.863Z",
      "description": "Set variable message to a is greater than 20 and b is true."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.863Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:22.869Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.869Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.869Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.869Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-01T22:29:22.869Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-01T22:29:22.869Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-01T22:29:22.869Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-01T22:29:22.869Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-01T22:29:22.869Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.869Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:22.872Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.872Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.872Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:22.872Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-01T22:29:22.872Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-01T22:29:22.872Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.872Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-01T22:29:22.876Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.876Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.876Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.876Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:29:22.878Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.878Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.878Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-01T22:29:22.878Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-01T22:29:22.878Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-01T22:29:22.878Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.878Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:22.882Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:22.882Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-01T22:29:22.882Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.882Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:22.883Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:22.883Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-01T22:29:22.883Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-01T22:29:22.883Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.883Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.883Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:22.885Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.885Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:29:22.885Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.885Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:22.888Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.889Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.889Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.889Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:29:22.889Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.889Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:22.893Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:29:22.893Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:22.893Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-01T22:29:22.893Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.893Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.898Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:29:22.898Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:22.900Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.900Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:29:22.900Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.901Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-01T22:29:22.901Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-01T22:29:22.905Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-01T22:29:22.905Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.907Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:29:22.907Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-01T22:29:22.915Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:22.915Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-01T22:29:22.915Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:22.915Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.920Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-01T22:29:22.920Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.942Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-01T22:29:22.942Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-01T22:29:22.951Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:22.951Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:22.951Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.957Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-01T22:29:22.957Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.957Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.961Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-01T22:29:22.961Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-01T22:29:22.961Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-01T22:29:22.990Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-01T22:29:22.990Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-01T22:29:22.990Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.997Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-01T22:29:22.997Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-01T22:29:22.997Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:22.999Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:29:22.999Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:29:22.999Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:29:22.999Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:29:22.999Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.015Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:29:23.015Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-01T22:29:23.015Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:23.015Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.015Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:29:23.015Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.015Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.015Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.015Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-01T22:29:23.015Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:23.016Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:29:23.016Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:29:23.016Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.018Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:29:23.018Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:23.020Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:29:23.020Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.020Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-01T22:29:23.020Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.020Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.022Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.029Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:29:23.029Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.030Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.030Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-01T22:29:23.030Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.030Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.030Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-01T22:29:23.030Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.030Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-01T22:29:23.030Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.030Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:29:23.031Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.031Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.031Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.031Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-01T22:29:23.031Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.031Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.031Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.033Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.033Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.033Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-01T22:29:23.033Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.033Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.033Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.036Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:23.036Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.036Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.036Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-01T22:29:23.036Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.036Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-01T22:29:23.036Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.036Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.036Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.036Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:29:23.037Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.037Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.037Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-01T22:29:23.037Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.037Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.037Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-01T22:29:23.039Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-01T22:29:23.039Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-01T22:29:23.039Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-01T22:29:23.040Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:23.041Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.041Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.041Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:23.044Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.044Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-01T22:29:23.044Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.044Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:23.046Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:29:23.046Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.046Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-01T22:29:23.046Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.046Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:23.048Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:29:23.048Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.048Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-01T22:29:23.048Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.048Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:23.049Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:29:23.049Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:23.051Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:29:23.051Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.051Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.051Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:23.053Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:29:23.053Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:23.056Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-01T22:29:23.058Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-01T22:29:23.060Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:23.061Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.061Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:29:23.061Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.061Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:23.061Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.061Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:23.061Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:23.062Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:23.063Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.067Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-01T22:29:23.067Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:23.068Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:23.075Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:23.076Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false,
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.079Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.079Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:29:23.079Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.079Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-01T22:29:23.079Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-01T22:29:23.079Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-01T22:29:23.079Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.080Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.081Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.081Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:29:23.081Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.081Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:29:23.083Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:29:23.088Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-01T22:29:23.089Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-01T22:29:23.089Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-01T22:29:23.089Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.090Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.090Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.090Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.090Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-01T22:29:23.090Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.090Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:23.090Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.094Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:29:23.094Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.096Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.096Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:23.096Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:29:23.097Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:23.097Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-01T22:29:23.097Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:29:23.100Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:29:23.100Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-01T22:29:23.100Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.101Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-09-01T22:29:23.101Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:23.102Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.102Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-01T22:29:23.102Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.104Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:23.105Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-01T22:29:23.106Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:23.106Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-01T22:29:23.106Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "add_numbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    null
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings"
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:29:50.861Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-01T22:29:50.862Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-01T22:29:50.862Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-01T22:29:50.862Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:29:50.862Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-01T22:29:50.862Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-01T22:29:50.863Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray"
    },
    {
      "type": "VariableDeclaration",
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-01T22:29:50.866Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-01T22:29:50.866Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-01T22:29:50.866Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-01T22:29:50.866Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-01T22:29:50.866Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:50.867Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-01T22:29:50.869Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-01T22:29:50.869Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "stringValue"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:29:50.879Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-01T22:29:50.879Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-01T22:29:50.880Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:29:50.880Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:29:50.881Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:29:50.881Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-01T22:29:50.882Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:29:50.883Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-01T22:29:50.884Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:50.884Z",
      "description": "Set variable len to 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:29:50.885Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:29:50.885Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:29:50.886Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:29:50.886Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-01T22:29:50.887Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:50.887Z",
      "description": "Set variable len to 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:29:50.888Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:50.888Z",
      "description": "Set variable len to 10."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "message",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": {
                "type": "Identifier",
                "value": "a",
                "line": 5
              },
              "operator": ">",
              "right": {
                "type": "NumberLiteral",
                "value": "20",
                "line": 5
              },
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "message",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "a",
                      "line": 7
                    },
                    "operator": "<=",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "20",
                      "line": 7
                    },
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 11
            }
          ],
          "line": 11
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "message",
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 11,
          "otherwiseLine": 11,
          "condition": {
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": "a",
              "operator": ">",
              "right": "20"
            }
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "message",
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 7,
              "endLine": 11,
              "otherwiseLine": 10,
              "condition": {
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": "a",
                    "operator": "<=",
                    "right": "20"
                  }
                }
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:29:50.890Z",
      "description": "Set variable a to 25."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:50.890Z",
      "description": "Set variable b to true."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a > 50",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.890Z",
      "description": "Checked if a > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "b && a > 20",
      "result": true,
      "timestamp": "2024-09-01T22:29:50.890Z",
      "description": "Checked if b && a > 20."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "message",
      "type": "string",
      "value": "a is greater than 20 and b is true",
      "timestamp": "2024-09-01T22:29:50.890Z",
      "description": "Set variable message to a is greater than 20 and b is true."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.890Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:50.893Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.893Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.893Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.893Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-01T22:29:50.893Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-01T22:29:50.893Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-01T22:29:50.893Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-01T22:29:50.893Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-01T22:29:50.893Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.893Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:50.896Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.896Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.896Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:50.896Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-01T22:29:50.896Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-01T22:29:50.896Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.896Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-01T22:29:50.897Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.897Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.897Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.897Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:29:50.899Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.899Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.899Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-01T22:29:50.899Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-01T22:29:50.899Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-01T22:29:50.899Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.899Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:50.901Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:50.901Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-01T22:29:50.901Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.901Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:50.902Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:50.902Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-01T22:29:50.902Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-01T22:29:50.902Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.902Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.902Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:50.903Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.903Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:29:50.903Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.903Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:50.905Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.905Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.905Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.905Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:29:50.905Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.905Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:50.906Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.906Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:50.906Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-01T22:29:50.906Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.906Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.908Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:29:50.908Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:50.909Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.909Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:29:50.909Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.910Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-01T22:29:50.910Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-01T22:29:50.911Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-01T22:29:50.911Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.912Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:29:50.912Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-01T22:29:50.914Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:50.914Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-01T22:29:50.914Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.914Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.916Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-01T22:29:50.916Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.917Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-01T22:29:50.917Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-01T22:29:50.936Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:50.936Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:50.936Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.937Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-01T22:29:50.937Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.938Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.940Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-01T22:29:50.940Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-01T22:29:50.940Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-01T22:29:50.970Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-01T22:29:50.970Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-01T22:29:50.970Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.972Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-01T22:29:50.972Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-01T22:29:50.972Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.973Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:29:50.973Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:29:50.973Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:29:50.973Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:29:50.973Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:50.976Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:29:50.976Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-01T22:29:50.976Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:50.976Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.977Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:29:50.977Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.977Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-01T22:29:50.977Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:50.977Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-01T22:29:50.977Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:50.980Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:29:50.980Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:29:50.980Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:50.999Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:29:50.999Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:51.001Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:29:51.001Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.001Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-01T22:29:51.001Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.001Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.002Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.004Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:29:51.006Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.006Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.006Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.006Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-01T22:29:51.006Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.006Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.006Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.010Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.010Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.010Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-01T22:29:51.010Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.010Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.010Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.013Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:51.013Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.013Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.013Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-01T22:29:51.013Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.013Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-01T22:29:51.013Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.013Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.013Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.013Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:29:51.014Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.014Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.014Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-01T22:29:51.014Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.014Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.014Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-01T22:29:51.016Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-01T22:29:51.016Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-01T22:29:51.016Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-01T22:29:51.016Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:51.017Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.017Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.017Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:51.018Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.018Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-01T22:29:51.018Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.018Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:51.020Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:29:51.020Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.020Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-01T22:29:51.020Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.021Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:51.026Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:29:51.026Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.026Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-01T22:29:51.026Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.026Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:51.029Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:29:51.029Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:29:51.031Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:29:51.031Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.031Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.031Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:29:51.032Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:29:51.032Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:51.034Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-01T22:29:51.036Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-01T22:29:51.038Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:51.041Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:51.043Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:51.045Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:51.046Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:51.048Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-01T22:29:51.048Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.048Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:51.049Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false,
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.050Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.050Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:29:51.050Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.050Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-01T22:29:51.050Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-01T22:29:51.050Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-01T22:29:51.050Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.051Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.052Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.052Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:29:51.052Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.052Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:29:51.053Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:29:51.054Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-01T22:29:51.054Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-01T22:29:51.054Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-01T22:29:51.054Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.056Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.056Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.056Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.056Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-01T22:29:51.056Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.056Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:29:51.056Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.063Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:29:51.063Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.065Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.065Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:51.065Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:29:51.068Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:29:51.068Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-01T22:29:51.068Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:29:51.070Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:29:51.070Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-01T22:29:51.070Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.075Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-09-01T22:29:51.075Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:29:51.077Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.077Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-01T22:29:51.077Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:29:51.079Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-01T22:29:51.081Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:29:51.081Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-01T22:29:51.081Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "add_numbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    null
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings"
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:31:29.859Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-01T22:31:29.859Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-01T22:31:29.859Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-01T22:31:29.859Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:31:29.859Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-01T22:31:29.859Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-01T22:31:29.859Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray"
    },
    {
      "type": "VariableDeclaration",
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-01T22:31:29.861Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-01T22:31:29.861Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-01T22:31:29.861Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-01T22:31:29.861Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-01T22:31:29.861Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:29.861Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-01T22:31:29.865Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-01T22:31:29.865Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "stringValue"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:31:29.872Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-01T22:31:29.872Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-01T22:31:29.874Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:31:29.874Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:31:29.876Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:31:29.876Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-01T22:31:29.878Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:31:29.878Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-01T22:31:29.881Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:31:29.881Z",
      "description": "Set variable len to 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:31:29.883Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:31:29.883Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:31:29.884Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:31:29.884Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-01T22:31:29.886Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:29.886Z",
      "description": "Set variable len to 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:31:29.887Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:29.887Z",
      "description": "Set variable len to 10."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "message",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": {
                "type": "Identifier",
                "value": "a",
                "line": 5
              },
              "operator": ">",
              "right": {
                "type": "NumberLiteral",
                "value": "20",
                "line": 5
              },
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "message",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "a",
                      "line": 7
                    },
                    "operator": "<=",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "20",
                      "line": 7
                    },
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 11
            }
          ],
          "line": 11
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "message",
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 11,
          "otherwiseLine": 11,
          "condition": {
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": "a",
              "operator": ">",
              "right": "20"
            }
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "message",
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 7,
              "endLine": 11,
              "otherwiseLine": 10,
              "condition": {
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": "a",
                    "operator": "<=",
                    "right": "20"
                  }
                }
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:31:29.890Z",
      "description": "Set variable a to 25."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:31:29.890Z",
      "description": "Set variable b to true."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a > 50",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.890Z",
      "description": "Checked if a > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "b && a > 20",
      "result": true,
      "timestamp": "2024-09-01T22:31:29.890Z",
      "description": "Checked if b && a > 20."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "message",
      "type": "string",
      "value": "a is greater than 20 and b is true",
      "timestamp": "2024-09-01T22:31:29.890Z",
      "description": "Set variable message to a is greater than 20 and b is true."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.890Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:29.901Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.901Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.901Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.901Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-01T22:31:29.901Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-01T22:31:29.901Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-01T22:31:29.901Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-01T22:31:29.901Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-01T22:31:29.901Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.901Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:31:29.927Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.927Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.927Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:29.927Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-01T22:31:29.927Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-01T22:31:29.927Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.927Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-01T22:31:29.937Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.937Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.937Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.937Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:31:29.942Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.942Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.942Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-01T22:31:29.942Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-01T22:31:29.942Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-01T22:31:29.942Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.942Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:29.944Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:29.944Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-01T22:31:29.944Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.944Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:31:29.946Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:29.946Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-01T22:31:29.946Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-01T22:31:29.946Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.946Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.946Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:29.965Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.966Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:31:29.966Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.966Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:29.968Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.968Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.968Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.968Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:31:29.968Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.968Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:29.969Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.969Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:29.969Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-01T22:31:29.969Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.969Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.971Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:31:29.971Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:29.972Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.972Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:31:29.972Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.973Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-01T22:31:29.973Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-01T22:31:29.975Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-01T22:31:29.975Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.976Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:31:29.976Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-01T22:31:29.978Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:29.978Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-01T22:31:29.978Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.978Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.981Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-01T22:31:29.981Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.982Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-01T22:31:29.982Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-01T22:31:29.983Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:29.983Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-01T22:31:29.983Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.984Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-01T22:31:29.984Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.984Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.986Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-01T22:31:29.986Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-01T22:31:29.986Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-01T22:31:29.992Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-01T22:31:29.992Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-01T22:31:29.992Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.994Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-01T22:31:29.994Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-01T22:31:29.994Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.996Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:31:29.996Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:31:29.996Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:31:29.996Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:31:29.996Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:29.997Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:31:29.997Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-01T22:31:29.997Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:29.997Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.997Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:31:29.997Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.997Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-01T22:31:29.997Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:29.997Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-01T22:31:29.997Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:29.999Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:31:29.999Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:31:29.999Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.000Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:31:30.000Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:31:30.001Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:31:30.001Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.001Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-01T22:31:30.001Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.001Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.003Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.004Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:31:30.006Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.006Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.006Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.006Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-01T22:31:30.006Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.006Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.006Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.007Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.007Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.007Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-01T22:31:30.007Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.007Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.007Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.009Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:31:30.009Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.009Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.009Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-01T22:31:30.009Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.009Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-01T22:31:30.009Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.009Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.009Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.009Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:31:30.010Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.010Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.010Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-01T22:31:30.010Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.010Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.010Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-01T22:31:30.011Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-01T22:31:30.011Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-01T22:31:30.011Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-01T22:31:30.011Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:31:30.012Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.012Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.012Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:31:30.014Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.014Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-01T22:31:30.014Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.014Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:31:30.015Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:31:30.015Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.015Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-01T22:31:30.015Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.015Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:31:30.017Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:31:30.017Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.017Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-01T22:31:30.017Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.017Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:31:30.018Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:31:30.018Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:31:30.019Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:31:30.019Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.019Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.019Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:31:30.020Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:31:30.020Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:31:30.022Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.023Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:30.023Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-01T22:31:30.024Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-01T22:31:30.025Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:30.027Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.027Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:31:30.027Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.027Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:31:30.027Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.027Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:31:30.027Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.027Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:31:30.027Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:31:30.028Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:31:30.030Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.031Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:31:30.032Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:31:30.033Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:31:30.034Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false,
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.036Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.036Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:31:30.036Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.036Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-01T22:31:30.036Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-01T22:31:30.036Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-01T22:31:30.036Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.037Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.038Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.038Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:31:30.038Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.038Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:31:30.039Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:31:30.041Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-01T22:31:30.041Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-01T22:31:30.041Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-01T22:31:30.041Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.042Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.042Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.042Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.042Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-01T22:31:30.042Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.042Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:31:30.042Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.044Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:31:30.044Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.045Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.045Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:31:30.045Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:31:30.046Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:31:30.046Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-01T22:31:30.046Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:31:30.048Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:31:30.048Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-01T22:31:30.048Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.049Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-09-01T22:31:30.049Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:31:30.050Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.050Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-01T22:31:30.050Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:31:30.052Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-01T22:31:30.053Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:31:30.053Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-01T22:31:30.053Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "add_numbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    null
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings"
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:36:04.344Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-01T22:36:04.344Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-01T22:36:04.344Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-01T22:36:04.344Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:36:04.344Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-01T22:36:04.344Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-01T22:36:04.344Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray"
    },
    {
      "type": "VariableDeclaration",
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-01T22:36:04.345Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-01T22:36:04.345Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-01T22:36:04.345Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-01T22:36:04.345Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-01T22:36:04.345Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.345Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-01T22:36:04.348Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-01T22:36:04.348Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "stringValue"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:36:04.354Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-01T22:36:04.354Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-01T22:36:04.356Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:36:04.356Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:36:04.358Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:36:04.358Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-01T22:36:04.359Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:36:04.359Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-01T22:36:04.360Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:36:04.360Z",
      "description": "Set variable len to 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:36:04.362Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:36:04.362Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:36:04.363Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:36:04.363Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-01T22:36:04.364Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.364Z",
      "description": "Set variable len to 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:36:04.365Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.365Z",
      "description": "Set variable len to 10."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "message",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": {
                "type": "Identifier",
                "value": "a",
                "line": 5
              },
              "operator": ">",
              "right": {
                "type": "NumberLiteral",
                "value": "20",
                "line": 5
              },
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "message",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "a",
                      "line": 7
                    },
                    "operator": "<=",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "20",
                      "line": 7
                    },
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 11
            }
          ],
          "line": 11
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "message",
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 11,
          "otherwiseLine": 11,
          "condition": {
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": "a",
              "operator": ">",
              "right": "20"
            }
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "message",
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 7,
              "endLine": 11,
              "otherwiseLine": 10,
              "condition": {
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": "a",
                    "operator": "<=",
                    "right": "20"
                  }
                }
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:36:04.367Z",
      "description": "Set variable a to 25."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:36:04.367Z",
      "description": "Set variable b to true."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a > 50",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.367Z",
      "description": "Checked if a > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "b && a > 20",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.367Z",
      "description": "Checked if b && a > 20."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "message",
      "type": "string",
      "value": "a is greater than 20 and b is true",
      "timestamp": "2024-09-01T22:36:04.367Z",
      "description": "Set variable message to a is greater than 20 and b is true."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.367Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.370Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.370Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.370Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.370Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-01T22:36:04.370Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-01T22:36:04.370Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-01T22:36:04.370Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-01T22:36:04.370Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-01T22:36:04.370Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.370Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:36:04.372Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.372Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.372Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.372Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-01T22:36:04.372Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-01T22:36:04.372Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.372Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-01T22:36:04.378Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.378Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.378Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.378Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:36:04.380Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.380Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.380Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-01T22:36:04.380Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-01T22:36:04.380Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-01T22:36:04.380Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.380Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.381Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.381Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-01T22:36:04.381Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.381Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:36:04.383Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.383Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.383Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-01T22:36:04.383Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.384Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.384Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.385Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.385Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:36:04.385Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.385Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.386Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.386Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.386Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.386Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:36:04.386Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.386Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.389Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.389Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.389Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-01T22:36:04.389Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.389Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.391Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:36:04.391Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.395Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.395Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:36:04.395Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.398Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-01T22:36:04.398Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-01T22:36:04.399Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-01T22:36:04.399Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.400Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:36:04.400Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-01T22:36:04.402Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.402Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-01T22:36:04.402Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.402Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.406Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-01T22:36:04.406Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.407Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-01T22:36:04.407Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-01T22:36:04.408Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.408Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-01T22:36:04.408Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.410Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-01T22:36:04.410Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.410Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.412Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-01T22:36:04.412Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-01T22:36:04.412Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-01T22:36:04.420Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-01T22:36:04.420Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-01T22:36:04.420Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.424Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-01T22:36:04.424Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-01T22:36:04.424Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.426Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:36:04.426Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:36:04.426Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:36:04.426Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:36:04.426Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.430Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:36:04.430Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-01T22:36:04.430Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.430Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.430Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:36:04.430Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.430Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.430Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.430Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-01T22:36:04.430Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.434Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:36:04.435Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:36:04.435Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.436Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:36:04.436Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:36:04.438Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:36:04.438Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.438Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-01T22:36:04.438Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.438Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.440Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.443Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:36:04.445Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.445Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.445Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.445Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-01T22:36:04.445Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.445Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.445Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.446Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.446Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.446Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-01T22:36:04.447Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.447Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.447Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.448Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:36:04.448Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.448Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.448Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-01T22:36:04.448Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.448Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-01T22:36:04.448Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.448Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.448Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.448Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:36:04.450Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.450Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.450Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-01T22:36:04.450Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.450Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.450Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-01T22:36:04.451Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-01T22:36:04.451Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-01T22:36:04.451Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-01T22:36:04.451Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:36:04.455Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.455Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.455Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:36:04.457Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.457Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-01T22:36:04.457Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.457Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:36:04.460Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:36:04.460Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.460Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-01T22:36:04.460Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.461Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:36:04.462Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:36:04.462Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.462Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-01T22:36:04.462Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.462Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:36:04.463Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:36:04.463Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:36:04.465Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:36:04.465Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.465Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.465Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.466Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:36:04.466Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:36:04.470Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-01T22:36:04.472Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.474Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-01T22:36:04.475Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:36:04.481Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:36:04.483Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:36:04.484Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:36:04.485Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:36:04.486Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:36:04.491Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false,
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.493Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.494Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:36:04.494Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.494Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-01T22:36:04.494Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-01T22:36:04.494Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-01T22:36:04.494Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.495Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.497Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.497Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:36:04.497Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.497Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:36:04.498Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:36:04.500Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-01T22:36:04.500Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-01T22:36:04.500Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-01T22:36:04.500Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.501Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.501Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.501Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.501Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-01T22:36:04.501Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.501Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:36:04.501Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.506Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:36:04.506Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.509Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.509Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:36:04.509Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:36:04.510Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:36:04.510Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-01T22:36:04.510Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:36:04.512Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:36:04.512Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-01T22:36:04.512Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.514Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-09-01T22:36:04.514Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:36:04.515Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.515Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-01T22:36:04.515Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:36:04.517Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-01T22:36:04.518Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:36:04.518Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-01T22:36:04.518Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "add_numbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    null
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings"
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:39:53.608Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-01T22:39:53.608Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-01T22:39:53.608Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-01T22:39:53.608Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:39:53.608Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-01T22:39:53.608Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-01T22:39:53.608Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray"
    },
    {
      "type": "VariableDeclaration",
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-01T22:39:53.609Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-01T22:39:53.610Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-01T22:39:53.610Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-01T22:39:53.610Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-01T22:39:53.610Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.610Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-01T22:39:53.613Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-01T22:39:53.613Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "stringValue"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:39:53.624Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-01T22:39:53.624Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-01T22:39:53.625Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:39:53.625Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:39:53.630Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:39:53.630Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-01T22:39:53.632Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:39:53.632Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-01T22:39:53.637Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:39:53.637Z",
      "description": "Set variable len to 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:39:53.643Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:39:53.643Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:39:53.648Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:39:53.648Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-01T22:39:53.649Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.649Z",
      "description": "Set variable len to 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:39:53.650Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.650Z",
      "description": "Set variable len to 10."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "message",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": {
                "type": "Identifier",
                "value": "a",
                "line": 5
              },
              "operator": ">",
              "right": {
                "type": "NumberLiteral",
                "value": "20",
                "line": 5
              },
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "message",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "a",
                      "line": 7
                    },
                    "operator": "<=",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "20",
                      "line": 7
                    },
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 11
            }
          ],
          "line": 11
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "message",
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 11,
          "otherwiseLine": 11,
          "condition": {
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": "a",
              "operator": ">",
              "right": "20"
            }
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "message",
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 7,
              "endLine": 11,
              "otherwiseLine": 10,
              "condition": {
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": "a",
                    "operator": "<=",
                    "right": "20"
                  }
                }
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:39:53.654Z",
      "description": "Set variable a to 25."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:39:53.654Z",
      "description": "Set variable b to true."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a > 50",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.654Z",
      "description": "Checked if a > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "b && a > 20",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.654Z",
      "description": "Checked if b && a > 20."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "message",
      "type": "string",
      "value": "a is greater than 20 and b is true",
      "timestamp": "2024-09-01T22:39:53.654Z",
      "description": "Set variable message to a is greater than 20 and b is true."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.654Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.662Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.663Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.663Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.663Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-01T22:39:53.663Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-01T22:39:53.663Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-01T22:39:53.663Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-01T22:39:53.663Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-01T22:39:53.663Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.663Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:39:53.686Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.686Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.686Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.686Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-01T22:39:53.686Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-01T22:39:53.686Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.686Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-01T22:39:53.694Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.695Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.695Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.695Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:39:53.697Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.697Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.697Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-01T22:39:53.697Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-01T22:39:53.697Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-01T22:39:53.697Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.697Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.700Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.700Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-01T22:39:53.700Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.700Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:39:53.701Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.701Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.701Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-01T22:39:53.701Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.701Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.701Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.703Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.706Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:39:53.706Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.706Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.709Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.709Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.710Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.710Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:39:53.710Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.710Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.712Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.713Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.713Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-01T22:39:53.713Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.713Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.715Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:39:53.715Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.716Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.716Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:39:53.716Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.717Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-01T22:39:53.717Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-01T22:39:53.718Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-01T22:39:53.718Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.720Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:39:53.720Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-01T22:39:53.721Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.721Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-01T22:39:53.721Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.721Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.723Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-01T22:39:53.723Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.725Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-01T22:39:53.725Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-01T22:39:53.726Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.726Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-01T22:39:53.726Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.727Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-01T22:39:53.727Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.727Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.728Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-01T22:39:53.728Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-01T22:39:53.728Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-01T22:39:53.734Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-01T22:39:53.734Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-01T22:39:53.734Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.736Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-01T22:39:53.736Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-01T22:39:53.736Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.737Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:39:53.737Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:39:53.737Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:39:53.737Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:39:53.737Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.738Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:39:53.739Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-01T22:39:53.739Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.739Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.739Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:39:53.739Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.739Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.739Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.739Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-01T22:39:53.739Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.740Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:39:53.740Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:39:53.740Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.741Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:39:53.741Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:39:53.742Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:39:53.743Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.743Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-01T22:39:53.743Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.743Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.746Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.747Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:39:53.749Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.749Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.749Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.749Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-01T22:39:53.749Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.749Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.749Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.750Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.750Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.750Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-01T22:39:53.750Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.750Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.750Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.752Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:39:53.752Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.752Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.752Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-01T22:39:53.752Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.752Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-01T22:39:53.752Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.752Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.752Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.752Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:39:53.753Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.753Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.753Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-01T22:39:53.753Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.753Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.753Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-01T22:39:53.754Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-01T22:39:53.754Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-01T22:39:53.754Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-01T22:39:53.754Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:39:53.756Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.756Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.756Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:39:53.757Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.757Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-01T22:39:53.757Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.757Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:39:53.758Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:39:53.758Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.759Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-01T22:39:53.759Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.759Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:39:53.760Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:39:53.760Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.760Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-01T22:39:53.760Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.760Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:39:53.761Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:39:53.761Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:39:53.772Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:39:53.772Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.772Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.772Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.773Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:39:53.773Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:39:53.775Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-01T22:39:53.777Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-01T22:39:53.779Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.780Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:39:53.781Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:39:53.798Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:39:53.800Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:39:53.802Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:39:53.803Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false,
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.805Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.805Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:39:53.805Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.805Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-01T22:39:53.805Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-01T22:39:53.805Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-01T22:39:53.805Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.807Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.809Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.809Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:39:53.809Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.809Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:39:53.810Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:39:53.811Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-01T22:39:53.811Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-01T22:39:53.811Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-01T22:39:53.811Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.812Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.812Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.812Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.812Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-01T22:39:53.812Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.812Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:39:53.812Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.814Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:39:53.814Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.818Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.818Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:39:53.818Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:39:53.819Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:39:53.819Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-01T22:39:53.819Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:39:53.821Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:39:53.821Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-01T22:39:53.821Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.823Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-09-01T22:39:53.823Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:39:53.826Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.826Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-01T22:39:53.826Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:39:53.827Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-01T22:39:53.829Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:39:53.829Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-01T22:39:53.829Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "add_numbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    null
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings"
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:43:09.887Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-01T22:43:09.887Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-01T22:43:09.887Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-01T22:43:09.887Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:43:09.887Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-01T22:43:09.887Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-01T22:43:09.887Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray"
    },
    {
      "type": "VariableDeclaration",
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-01T22:43:09.890Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-01T22:43:09.890Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-01T22:43:09.890Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-01T22:43:09.890Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-01T22:43:09.890Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:09.890Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-01T22:43:09.893Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-01T22:43:09.893Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "stringValue"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:43:09.901Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-01T22:43:09.901Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-01T22:43:09.902Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:43:09.902Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:43:09.903Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:43:09.903Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-01T22:43:09.905Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:43:09.905Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-01T22:43:09.907Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:43:09.907Z",
      "description": "Set variable len to 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:43:09.908Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:43:09.908Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:43:09.909Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:43:09.909Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-01T22:43:09.910Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:09.910Z",
      "description": "Set variable len to 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:43:09.912Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:09.912Z",
      "description": "Set variable len to 10."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "message",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": {
                "type": "Identifier",
                "value": "a",
                "line": 5
              },
              "operator": ">",
              "right": {
                "type": "NumberLiteral",
                "value": "20",
                "line": 5
              },
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "message",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "a",
                      "line": 7
                    },
                    "operator": "<=",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "20",
                      "line": 7
                    },
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 11
            }
          ],
          "line": 11
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "message",
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 11,
          "otherwiseLine": 11,
          "condition": {
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": "a",
              "operator": ">",
              "right": "20"
            }
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "message",
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 7,
              "endLine": 11,
              "otherwiseLine": 10,
              "condition": {
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": "a",
                    "operator": "<=",
                    "right": "20"
                  }
                }
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:43:09.914Z",
      "description": "Set variable a to 25."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:43:09.914Z",
      "description": "Set variable b to true."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a > 50",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.914Z",
      "description": "Checked if a > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "b && a > 20",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.914Z",
      "description": "Checked if b && a > 20."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "message",
      "type": "string",
      "value": "a is greater than 20 and b is true",
      "timestamp": "2024-09-01T22:43:09.914Z",
      "description": "Set variable message to a is greater than 20 and b is true."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.914Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:09.916Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.916Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.916Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.916Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-01T22:43:09.916Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-01T22:43:09.916Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-01T22:43:09.916Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-01T22:43:09.916Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-01T22:43:09.916Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.916Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:43:09.918Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.918Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.918Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.918Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-01T22:43:09.918Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-01T22:43:09.918Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.918Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-01T22:43:09.920Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.920Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.920Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.920Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:43:09.922Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.922Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.922Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-01T22:43:09.922Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-01T22:43:09.922Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-01T22:43:09.922Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.922Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:09.923Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.923Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-01T22:43:09.923Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.923Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:43:09.925Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.925Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.925Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-01T22:43:09.925Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.925Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.925Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:09.926Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.926Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:43:09.926Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.926Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:09.928Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.928Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.928Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.928Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:43:09.928Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.928Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:09.930Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.930Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.930Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-01T22:43:09.930Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.930Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.931Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:43:09.931Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:09.932Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.932Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:43:09.932Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.934Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-01T22:43:09.934Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-01T22:43:09.936Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-01T22:43:09.936Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.938Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:43:09.938Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-01T22:43:09.939Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.939Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-01T22:43:09.939Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.939Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.941Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-01T22:43:09.941Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.942Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-01T22:43:09.942Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-01T22:43:09.943Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:09.943Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-01T22:43:09.943Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.945Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-01T22:43:09.945Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.945Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.947Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-01T22:43:09.947Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-01T22:43:09.947Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-01T22:43:09.954Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-01T22:43:09.954Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-01T22:43:09.954Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.956Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-01T22:43:09.956Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-01T22:43:09.956Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.957Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:43:09.957Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:43:09.958Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:43:09.958Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:43:09.958Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:09.960Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:43:09.960Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-01T22:43:09.960Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:09.960Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.960Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:43:09.960Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.960Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.960Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.960Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-01T22:43:09.960Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.962Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:43:09.962Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:43:09.962Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:09.963Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:43:09.963Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:43:09.964Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:43:09.964Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.964Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-01T22:43:09.964Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.964Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.966Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.969Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:43:09.971Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:09.971Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.971Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.971Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-01T22:43:09.971Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.971Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.971Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:09.973Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.973Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.973Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-01T22:43:09.973Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.973Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.973Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:09.974Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:43:09.974Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.974Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.974Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-01T22:43:09.974Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.974Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-01T22:43:09.974Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.974Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.974Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.974Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:43:09.976Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.976Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.976Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-01T22:43:09.976Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.976Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.976Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-01T22:43:09.977Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-01T22:43:09.977Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-01T22:43:09.977Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-01T22:43:09.977Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:43:09.979Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.979Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.979Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:43:09.980Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.980Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-01T22:43:09.980Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.980Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:43:09.981Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:43:09.982Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.982Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-01T22:43:09.982Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.982Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:43:09.983Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:43:09.983Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.983Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-01T22:43:09.983Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.983Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:43:09.985Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:43:09.985Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:43:09.986Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:43:09.987Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.987Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.987Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.989Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:43:09.989Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:43:09.990Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-01T22:43:09.992Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-01T22:43:09.994Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:43:09.996Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:43:10.002Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:43:10.004Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:43:10.007Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.009Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:43:10.009Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:10.009Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.009Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:43:10.009Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:10.009Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:43:10.009Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:43:10.009Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:43:10.011Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false,
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:10.013Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.013Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:43:10.013Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:10.013Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-01T22:43:10.013Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-01T22:43:10.013Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-01T22:43:10.013Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:10.016Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:10.019Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.019Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:43:10.032Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:10.032Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:43:10.075Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:43:10.077Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-01T22:43:10.077Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-01T22:43:10.077Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-01T22:43:10.077Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:10.081Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:10.081Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.081Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.081Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-01T22:43:10.081Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:10.081Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:43:10.081Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:10.083Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:43:10.083Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:10.084Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:10.084Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:43:10.085Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:43:10.086Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:43:10.086Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-01T22:43:10.086Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:43:10.088Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:43:10.088Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-01T22:43:10.088Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:10.089Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-09-01T22:43:10.089Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:43:10.093Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:10.093Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-01T22:43:10.093Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:43:10.094Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-01T22:43:10.096Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:43:10.096Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-01T22:43:10.096Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "add_numbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    null
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings"
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:44:07.173Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-01T22:44:07.173Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-01T22:44:07.173Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-01T22:44:07.173Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:44:07.173Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-01T22:44:07.173Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-01T22:44:07.173Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray"
    },
    {
      "type": "VariableDeclaration",
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-01T22:44:07.177Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-01T22:44:07.177Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-01T22:44:07.177Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-01T22:44:07.177Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-01T22:44:07.177Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.177Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-01T22:44:07.210Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-01T22:44:07.210Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "stringValue"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:44:07.216Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-01T22:44:07.216Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-01T22:44:07.217Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:44:07.217Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:44:07.218Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:44:07.218Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-01T22:44:07.221Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:44:07.221Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-01T22:44:07.224Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:44:07.224Z",
      "description": "Set variable len to 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:44:07.226Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:44:07.226Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:44:07.233Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:44:07.233Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-01T22:44:07.235Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.235Z",
      "description": "Set variable len to 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:44:07.238Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.238Z",
      "description": "Set variable len to 10."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "message",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": {
                "type": "Identifier",
                "value": "a",
                "line": 5
              },
              "operator": ">",
              "right": {
                "type": "NumberLiteral",
                "value": "20",
                "line": 5
              },
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "message",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "a",
                      "line": 7
                    },
                    "operator": "<=",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "20",
                      "line": 7
                    },
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 11
            }
          ],
          "line": 11
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "message",
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 11,
          "otherwiseLine": 11,
          "condition": {
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": "a",
              "operator": ">",
              "right": "20"
            }
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "message",
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 7,
              "endLine": 11,
              "otherwiseLine": 10,
              "condition": {
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": "a",
                    "operator": "<=",
                    "right": "20"
                  }
                }
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:44:07.243Z",
      "description": "Set variable a to 25."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:44:07.243Z",
      "description": "Set variable b to true."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a > 50",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.243Z",
      "description": "Checked if a > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "b && a > 20",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.244Z",
      "description": "Checked if b && a > 20."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "message",
      "type": "string",
      "value": "a is greater than 20 and b is true",
      "timestamp": "2024-09-01T22:44:07.244Z",
      "description": "Set variable message to a is greater than 20 and b is true."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.244Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.246Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.246Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.246Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.246Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-01T22:44:07.246Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-01T22:44:07.246Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-01T22:44:07.246Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-01T22:44:07.246Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-01T22:44:07.246Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.246Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:44:07.249Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.249Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.249Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.249Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-01T22:44:07.249Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-01T22:44:07.249Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.249Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-01T22:44:07.250Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.250Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.251Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.251Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:44:07.252Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.252Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.252Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-01T22:44:07.252Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-01T22:44:07.252Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-01T22:44:07.252Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.252Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.254Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.254Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-01T22:44:07.254Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.254Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:44:07.255Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.255Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.255Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-01T22:44:07.255Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.255Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.255Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.256Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.256Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:44:07.256Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.256Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.257Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.257Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.257Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.257Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:44:07.257Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.257Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.258Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.258Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.258Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-01T22:44:07.258Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.258Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.259Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:44:07.259Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.260Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.260Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:44:07.260Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.261Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-01T22:44:07.261Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-01T22:44:07.270Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-01T22:44:07.270Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.271Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:44:07.271Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-01T22:44:07.272Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.272Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-01T22:44:07.272Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.272Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.275Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-01T22:44:07.275Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.276Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-01T22:44:07.276Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-01T22:44:07.277Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.277Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-01T22:44:07.277Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.280Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-01T22:44:07.280Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.280Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.282Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-01T22:44:07.282Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-01T22:44:07.282Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-01T22:44:07.289Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-01T22:44:07.289Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-01T22:44:07.289Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.290Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-01T22:44:07.290Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-01T22:44:07.290Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.292Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:44:07.292Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:44:07.292Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:44:07.292Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:44:07.292Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.293Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:44:07.293Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-01T22:44:07.293Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.293Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.293Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:44:07.293Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.293Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.293Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.293Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-01T22:44:07.293Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.295Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:44:07.295Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:44:07.295Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.296Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:44:07.296Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:44:07.298Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:44:07.298Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.298Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-01T22:44:07.298Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.298Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:44:07.299Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.299Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.299Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.299Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-01T22:44:07.299Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.300Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.300Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:44:07.300Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.300Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-01T22:44:07.300Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.300Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.302Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:44:07.303Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.303Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.303Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.303Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-01T22:44:07.303Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.303Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.303Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.305Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.305Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.305Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-01T22:44:07.305Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.305Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.305Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.306Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:44:07.306Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.306Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.306Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-01T22:44:07.306Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.306Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-01T22:44:07.306Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.306Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.306Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.306Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:44:07.308Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.308Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.308Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-01T22:44:07.308Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.308Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.308Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-01T22:44:07.309Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-01T22:44:07.309Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-01T22:44:07.309Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-01T22:44:07.309Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:44:07.311Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.311Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.311Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:44:07.315Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.315Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-01T22:44:07.315Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.315Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:44:07.317Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:44:07.317Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.317Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-01T22:44:07.317Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.317Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:44:07.321Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:44:07.321Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.321Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-01T22:44:07.321Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.321Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:44:07.324Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:44:07.324Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:44:07.325Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:44:07.325Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.325Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.325Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.327Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:44:07.327Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:44:07.328Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-01T22:44:07.332Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.337Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:44:07.338Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-01T22:44:07.338Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:44:07.338Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-01T22:44:07.338Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:44:07.339Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:44:07.340Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.340Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:44:07.340Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:44:07.341Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:44:07.343Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:44:07.347Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:44:07.349Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false,
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.351Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.351Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:44:07.351Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.351Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-01T22:44:07.351Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-01T22:44:07.351Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-01T22:44:07.351Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.353Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.354Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.354Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:44:07.354Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.354Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:44:07.355Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:44:07.357Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-01T22:44:07.357Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-01T22:44:07.357Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-01T22:44:07.357Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.359Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.359Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.359Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.359Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-01T22:44:07.359Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.359Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:44:07.359Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.361Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:44:07.361Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.362Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.362Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:44:07.362Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:44:07.365Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:44:07.365Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-01T22:44:07.365Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:44:07.367Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:44:07.367Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-01T22:44:07.367Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.368Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-09-01T22:44:07.368Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:44:07.370Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.370Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-01T22:44:07.370Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:44:07.371Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-01T22:44:07.372Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:44:07.372Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-01T22:44:07.372Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "add_numbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    null
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings"
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:51:18.595Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-01T22:51:18.595Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-01T22:51:18.595Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-01T22:51:18.596Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:51:18.596Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-01T22:51:18.596Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-01T22:51:18.596Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray"
    },
    {
      "type": "VariableDeclaration",
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-01T22:51:18.597Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-01T22:51:18.597Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-01T22:51:18.597Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-01T22:51:18.597Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-01T22:51:18.597Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.597Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-01T22:51:18.599Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-01T22:51:18.599Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "stringValue"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:51:18.606Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-01T22:51:18.606Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-01T22:51:18.607Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:51:18.607Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-01T22:51:18.609Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-01T22:51:18.609Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-01T22:51:18.611Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-01T22:51:18.612Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-01T22:51:18.613Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:51:18.613Z",
      "description": "Set variable len to 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:51:18.614Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:51:18.614Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-01T22:51:18.616Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-01T22:51:18.616Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-01T22:51:18.617Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.617Z",
      "description": "Set variable len to 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-01T22:51:18.618Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.618Z",
      "description": "Set variable len to 10."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "message",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": {
                "type": "Identifier",
                "value": "a",
                "line": 5
              },
              "operator": ">",
              "right": {
                "type": "NumberLiteral",
                "value": "20",
                "line": 5
              },
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "message",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "a",
                      "line": 7
                    },
                    "operator": "<=",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "20",
                      "line": 7
                    },
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 11
            }
          ],
          "line": 11
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "message",
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 11,
          "otherwiseLine": 11,
          "condition": {
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": "a",
              "operator": ">",
              "right": "20"
            }
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "message",
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 7,
              "endLine": 11,
              "otherwiseLine": 10,
              "condition": {
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": "a",
                    "operator": "<=",
                    "right": "20"
                  }
                }
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:51:18.620Z",
      "description": "Set variable a to 25."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:51:18.620Z",
      "description": "Set variable b to true."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a > 50",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.620Z",
      "description": "Checked if a > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "b && a > 20",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.620Z",
      "description": "Checked if b && a > 20."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "message",
      "type": "string",
      "value": "a is greater than 20 and b is true",
      "timestamp": "2024-09-01T22:51:18.620Z",
      "description": "Set variable message to a is greater than 20 and b is true."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.620Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.622Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.622Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.622Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.622Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-01T22:51:18.622Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-01T22:51:18.623Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-01T22:51:18.623Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-01T22:51:18.623Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-01T22:51:18.623Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.623Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:51:18.625Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.625Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.625Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.625Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-01T22:51:18.625Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-01T22:51:18.625Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.625Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-01T22:51:18.626Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.626Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.626Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.626Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:51:18.628Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.628Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.628Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-01T22:51:18.628Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-01T22:51:18.628Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-01T22:51:18.628Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.628Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.630Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.630Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-01T22:51:18.630Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.630Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:51:18.631Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.631Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.631Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-01T22:51:18.631Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.631Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.631Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.633Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.633Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:51:18.633Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.633Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.636Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.636Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.636Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.637Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-01T22:51:18.637Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.637Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.638Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.638Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.638Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-01T22:51:18.638Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.638Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.640Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:51:18.641Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.642Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.642Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:51:18.642Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.645Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-01T22:51:18.645Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-01T22:51:18.646Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-01T22:51:18.646Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.648Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-01T22:51:18.648Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-01T22:51:18.650Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.650Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-01T22:51:18.650Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.650Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.652Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-01T22:51:18.652Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.653Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-01T22:51:18.654Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-01T22:51:18.655Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.655Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-01T22:51:18.655Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.656Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-01T22:51:18.656Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.656Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.658Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-01T22:51:18.658Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-01T22:51:18.658Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-01T22:51:18.665Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-01T22:51:18.665Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-01T22:51:18.665Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.666Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-01T22:51:18.666Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-01T22:51:18.666Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.668Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:51:18.668Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:51:18.668Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:51:18.668Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:51:18.668Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.669Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:51:18.669Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-01T22:51:18.669Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.669Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.669Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:51:18.669Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.669Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.669Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.669Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-01T22:51:18.669Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.671Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-01T22:51:18.671Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-01T22:51:18.671Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.672Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:51:18.672Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:51:18.674Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:51:18.674Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.674Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-01T22:51:18.674Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.674Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.675Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.677Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:51:18.680Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.680Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.680Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.680Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-01T22:51:18.680Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.680Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.680Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.681Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.681Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.681Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-01T22:51:18.681Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.681Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.681Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.682Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:51:18.682Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.682Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.682Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-01T22:51:18.682Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.682Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-01T22:51:18.682Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.682Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.682Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.682Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:51:18.684Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.684Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.684Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-01T22:51:18.684Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.684Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.684Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-01T22:51:18.685Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-01T22:51:18.685Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-01T22:51:18.685Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-01T22:51:18.685Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:51:18.688Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.688Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.688Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:51:18.690Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.690Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-01T22:51:18.690Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.690Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:51:18.691Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:51:18.691Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.691Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-01T22:51:18.691Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.691Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:51:18.694Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:51:18.694Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.694Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-01T22:51:18.694Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.694Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:51:18.695Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:51:18.695Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-01T22:51:18.697Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-01T22:51:18.697Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.697Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.697Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.699Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-01T22:51:18.699Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:51:18.701Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-01T22:51:18.703Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-01T22:51:18.704Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:51:18.706Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:51:18.708Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:51:18.710Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:51:18.712Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:51:18.713Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false,
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.716Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.716Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:51:18.716Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.716Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-01T22:51:18.716Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-01T22:51:18.716Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-01T22:51:18.716Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.718Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.719Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.719Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-01T22:51:18.719Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.719Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:51:18.735Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-01T22:51:18.742Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-01T22:51:18.742Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-01T22:51:18.742Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-01T22:51:18.742Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.747Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.747Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.747Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.747Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-01T22:51:18.747Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.747Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-01T22:51:18.747Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.752Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-01T22:51:18.752Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.754Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.754Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:51:18.754Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-01T22:51:18.754Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-01T22:51:18.754Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-01T22:51:18.754Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-01T22:51:18.755Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-01T22:51:18.755Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-01T22:51:18.755Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.756Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-09-01T22:51:18.756Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-01T22:51:18.757Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.757Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-01T22:51:18.757Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-01T22:51:18.758Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-01T22:51:18.760Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-01T22:51:18.760Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-01T22:51:18.760Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "add_numbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    null
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings"
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-02T15:46:17.994Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-02T15:46:17.994Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-02T15:46:17.994Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-02T15:46:17.994Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-02T15:46:17.995Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-02T15:46:17.995Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-02T15:46:17.995Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 3
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 5
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray"
    },
    {
      "type": "VariableDeclaration",
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-02T15:46:17.997Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-02T15:46:17.997Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-02T15:46:17.997Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-02T15:46:17.997Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-02T15:46:17.997Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:17.997Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 3
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 2
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-02T15:46:18.013Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-02T15:46:18.013Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "stringValue"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-02T15:46:18.023Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-02T15:46:18.023Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-02T15:46:18.024Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-02T15:46:18.024Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-02T15:46:18.027Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-02T15:46:18.027Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-02T15:46:18.030Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-02T15:46:18.030Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-02T15:46:18.036Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-02T15:46:18.036Z",
      "description": "Set variable len to 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-02T15:46:18.045Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-02T15:46:18.045Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-02T15:46:18.046Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-02T15:46:18.046Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-02T15:46:18.048Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.048Z",
      "description": "Set variable len to 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-02T15:46:18.050Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.050Z",
      "description": "Set variable len to 10."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "message",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": {
                "type": "Identifier",
                "value": "a",
                "line": 5
              },
              "operator": ">",
              "right": {
                "type": "NumberLiteral",
                "value": "20",
                "line": 5
              },
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "message",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "a",
                      "line": 7
                    },
                    "operator": "<=",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "20",
                      "line": 7
                    },
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "message",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 11
            }
          ],
          "line": 11
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "message",
          "value": {
            "type": "StringLiteral",
            "value": "a is greater than 50",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 11,
          "otherwiseLine": 11,
          "condition": {
            "left": "b",
            "operator": "and",
            "right": {
              "type": "Expression",
              "left": "a",
              "operator": ">",
              "right": "20"
            }
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "message",
              "value": {
                "type": "StringLiteral",
                "value": "a is greater than 20 and b is true",
                "line": 6
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 7,
              "endLine": 11,
              "otherwiseLine": 10,
              "condition": {
                "left": null,
                "operator": "not",
                "right": {
                  "type": "Expression",
                  "left": "b",
                  "operator": "or",
                  "right": {
                    "type": "Expression",
                    "left": "a",
                    "operator": "<=",
                    "right": "20"
                  }
                }
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Either b is not true or a is 20 or less",
                    "line": 8
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "message",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No condition met",
                    "line": 10
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-02T15:46:18.054Z",
      "description": "Set variable a to 25."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-02T15:46:18.054Z",
      "description": "Set variable b to true."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a > 50",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.054Z",
      "description": "Checked if a > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "b && a > 20",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.054Z",
      "description": "Checked if b && a > 20."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "message",
      "type": "string",
      "value": "a is greater than 20 and b is true",
      "timestamp": "2024-09-02T15:46:18.054Z",
      "description": "Set variable message to a is greater than 20 and b is true."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.055Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.066Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.066Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.067Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.067Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-02T15:46:18.067Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-02T15:46:18.067Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-02T15:46:18.067Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-02T15:46:18.067Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-02T15:46:18.067Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.067Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-02T15:46:18.069Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.069Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.069Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.069Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-02T15:46:18.070Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-02T15:46:18.070Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.070Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-02T15:46:18.075Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.075Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.075Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.075Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-02T15:46:18.081Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.081Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.081Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-02T15:46:18.081Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-02T15:46:18.081Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-02T15:46:18.081Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.081Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.083Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.083Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-02T15:46:18.083Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.083Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-02T15:46:18.085Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.085Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.085Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-02T15:46:18.085Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.085Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.085Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.086Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.086Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-02T15:46:18.086Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.086Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.094Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.094Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.095Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.095Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-02T15:46:18.095Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.095Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.097Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.097Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.097Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-02T15:46:18.097Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.097Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.099Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-02T15:46:18.099Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.109Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.109Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-02T15:46:18.109Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.113Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-02T15:46:18.113Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-02T15:46:18.119Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-02T15:46:18.119Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.125Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-02T15:46:18.125Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-02T15:46:18.127Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.127Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-02T15:46:18.127Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.127Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.130Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-02T15:46:18.130Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.132Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-02T15:46:18.132Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-02T15:46:18.134Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.134Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-02T15:46:18.134Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.136Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-02T15:46:18.136Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.136Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.143Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-02T15:46:18.143Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-02T15:46:18.143Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-02T15:46:18.159Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-02T15:46:18.159Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-02T15:46:18.159Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.161Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-02T15:46:18.161Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-02T15:46:18.161Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.162Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-02T15:46:18.162Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-02T15:46:18.162Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-02T15:46:18.164Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-02T15:46:18.164Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.167Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-02T15:46:18.167Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-02T15:46:18.167Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.167Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.167Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-02T15:46:18.167Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.167Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.167Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.167Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-02T15:46:18.167Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.170Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-02T15:46:18.170Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-02T15:46:18.170Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.171Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-02T15:46:18.171Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-02T15:46:18.173Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-02T15:46:18.173Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.173Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-02T15:46:18.173Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.173Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.179Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.183Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-02T15:46:18.185Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.185Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.185Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.185Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-02T15:46:18.185Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.185Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.185Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.186Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.186Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.186Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-02T15:46:18.186Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.186Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.186Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.190Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-02T15:46:18.190Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.190Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.190Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-02T15:46:18.190Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.190Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-02T15:46:18.190Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.190Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.190Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.190Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-02T15:46:18.192Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.192Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.192Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-02T15:46:18.192Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.192Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.192Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-02T15:46:18.194Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-02T15:46:18.194Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-02T15:46:18.194Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-02T15:46:18.194Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-02T15:46:18.201Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.201Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.201Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-02T15:46:18.203Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.203Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-02T15:46:18.203Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.203Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-02T15:46:18.206Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-02T15:46:18.207Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.207Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-02T15:46:18.207Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.207Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-02T15:46:18.210Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-02T15:46:18.210Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.210Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-02T15:46:18.210Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.210Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-02T15:46:18.212Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-02T15:46:18.212Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-02T15:46:18.216Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-02T15:46:18.216Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.216Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.216Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.219Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-02T15:46:18.219Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-09-02T15:46:18.223Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-02T15:46:18.227Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-02T15:46:18.228Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.230Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.230Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-02T15:46:18.231Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-02T15:46:18.233Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-02T15:46:18.236Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-02T15:46:18.238Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-02T15:46:18.242Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-09-02T15:46:18.244Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false,
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.248Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.248Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-02T15:46:18.248Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.248Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-02T15:46:18.248Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-02T15:46:18.248Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-02T15:46:18.248Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.249Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.251Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.251Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-02T15:46:18.251Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.251Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-02T15:46:18.252Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-02T15:46:18.253Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-02T15:46:18.253Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-02T15:46:18.253Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-02T15:46:18.253Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.256Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.256Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.256Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.256Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-02T15:46:18.256Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.256Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-09-02T15:46:18.256Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.258Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-02T15:46:18.258Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.259Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.259Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-02T15:46:18.259Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-02T15:46:18.263Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-02T15:46:18.263Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-02T15:46:18.263Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-02T15:46:18.268Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-02T15:46:18.268Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-02T15:46:18.268Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.270Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-09-02T15:46:18.270Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-02T15:46:18.271Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.271Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-02T15:46:18.271Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-09-02T15:46:18.273Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-02T15:46:18.274Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-02T15:46:18.274Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-02T15:46:18.274Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
