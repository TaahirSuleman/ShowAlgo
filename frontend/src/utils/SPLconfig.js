// Explicitly define case-insensitive keywords
export const keywords = [
  [/\bset\b|\bSET\b/i, "keyword"],
  [/".*?"/, "string"], // String literals
  [/\bto\b|\bTO\b|\bup\b|\bUP\b/i, "keyword"],
  [
    /\bnumber\b|\bNUMBER\b|\bstring\b|\bSTRING\b|\bboolean\b|\bBOOLEAN\b/i,
    "type",
  ],
  [
    /\bcreate\b|\bCREATE\b|\bas\b|\bAS\b|\bwith\b|\bWITH\b|\badd\b|\bADD\b|\binsert\b|\bINSERT\b|\bdelete\b|\bDELETE\b|\bremove\b|\bREMOVE\b|\binto\b|\bINTO\b|\bfrom\b|\bFROM\b|\barray\b|\bARRAY\b|\breturn\b|\bRETURN\b|\bvalues\b|\bVALUES\b|\bat\b|\bAT\b|\bof\b|\bOF\b|\bposition\b|\bPOSITION\b/i,
    "keyword.methods",
  ],
  [
    /\bif\b|\bIF\b|\bIS\b|\bis\b|\bequal\b|\bEQUAL\b|\bgreater\b|\bGREATER\b|\bless\b|\bLESS\b|\bthan\b|\bTHAN\b|\bthen\b|\bTHEN\b|\botherwise\b|\bOTHERWISE\b|\bend\s*if\b|\bEND\s*IF\b/i,
    "keyword.control",
  ],
  [
    /\bloop\b|\bLOOP\b|\buntil\b|\bUNTIL\b|\bend\s*loop\b|\bEND\s*LOOP\b|\bfor each\b|\bFOR EACH\b|\bend for\b|\bEND FOR\b|\bin\b|\bIN\b|\bwhile\b|\bWHILE\b|\bEND WHILE\b|\bend while\b/i,
    "keyword.control",
  ],
  [
    /\btrue\b|\bTRUE\b|\bfalse\b|\bFALSE\b|\band\b|\bAND\b|\bor\b|\bOR\b|\bnot\b|\bNOT\b/i,
    "keyword.boolean",
  ],
  [
    /\bdefine\b|\bDEFINE\b|\bparameters\b|\bPARAMETERS\b|\bend\s*function\b|\bEND\s*FUNCTION\b|\bsubstring\b|\bSUBSTRING\b|\blength\b|\bLENGTH\b|\bcharacter\b|\bCHARACTER\b/i,
    "keyword.function",
  ],
  [/\bsize\b|\bSIZE\b/i, "keyword"],
  [/\bprint\b|\bPRINT\b|\bdisplay\b|\bDISPLAY\b/i, "keyword"],
];

// Autocomplete suggestions for both lower and uppercase
export const getSuggestions = (monaco) => [
  {
    label: "set",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "set",
    detail: "Keyword: set",
  },
  {
    label: "SET",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "SET",
    detail: "Keyword: SET",
  },
  {
    label: "to",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "to",
    detail: "Keyword: to",
  },
  {
    label: "TO",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "TO",
    detail: "Keyword: TO",
  },
  {
    label: "number",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "number",
    detail: "Data type: number",
  },
  {
    label: "NUMBER",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "NUMBER",
    detail: "Data type: NUMBER",
  },
  {
    label: "string",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "string",
    detail: "Data type: string",
  },
  {
    label: "STRING",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "STRING",
    detail: "Data type: STRING",
  },
  {
    label: "boolean",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "boolean",
    detail: "Data type: boolean",
  },
  {
    label: "BOOLEAN",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "BOOLEAN",
    detail: "Data type: BOOLEAN",
  },
  {
    label: "create",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "create",
    detail: "Keyword: create",
  },
  {
    label: "CREATE",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "CREATE",
    detail: "Keyword: CREATE",
  },
  {
    label: "as",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "as",
    detail: "Keyword: as",
  },
  {
    label: "AS",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "AS",
    detail: "Keyword: AS",
  },
  {
    label: "with",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "with",
    detail: "Keyword: with",
  },
  {
    label: "WITH",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "WITH",
    detail: "Keyword: WITH",
  },
  {
    label: "add",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "add",
    detail: "Keyword: add",
  },
  {
    label: "ADD",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "ADD",
    detail: "Keyword: ADD",
  },
  {
    label: "insert",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "insert",
    detail: "Keyword: insert",
  },
  {
    label: "INSERT",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "INSERT",
    detail: "Keyword: INSERT",
  },
  {
    label: "delete",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "delete",
    detail: "Keyword: delete",
  },
  {
    label: "DELETE",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "DELETE",
    detail: "Keyword: DELETE",
  },
  {
    label: "remove",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "remove",
    detail: "Keyword: remove",
  },
  {
    label: "REMOVE",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "REMOVE",
    detail: "Keyword: REMOVE",
  },
  {
    label: "into",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "into",
    detail: "Keyword: into",
  },
  {
    label: "INTO",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "INTO",
    detail: "Keyword: INTO",
  },
  {
    label: "from",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "from",
    detail: "Keyword: from",
  },
  {
    label: "FROM",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "FROM",
    detail: "Keyword: FROM",
  },
  {
    label: "size",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "size",
    detail: "Keyword: size",
  },
  {
    label: "SIZE",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "SIZE",
    detail: "Keyword: SIZE",
  },
  {
    label: "if",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "if",
    detail: "Control structure: if",
  },
  {
    label: "IF",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "IF",
    detail: "Control structure: IF",
  },
  {
    label: "then",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "then",
    detail: "Control structure: then",
  },
  {
    label: "THEN",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "THEN",
    detail: "Control structure: THEN",
  },
  {
    label: "otherwise",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "otherwise",
    detail: "Control structure: otherwise",
  },
  {
    label: "OTHERWISE",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "OTHERWISE",
    detail: "Control structure: OTHERWISE",
  },
  {
    label: "end if",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "end if",
    detail: "Control structure: end if",
  },
  {
    label: "END IF",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "END IF",
    detail: "Control structure: END IF",
  },
  {
    label: "loop",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "loop",
    detail: "Control structure: loop",
  },
  {
    label: "LOOP",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "LOOP",
    detail: "Control structure: LOOP",
  },
  {
    label: "until",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "until",
    detail: "Control structure: until",
  },
  {
    label: "UNTIL",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "UNTIL",
    detail: "Control structure: UNTIL",
  },
  {
    label: "end loop",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "end loop",
    detail: "Control structure: end loop",
  },
  {
    label: "END LOOP",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "END LOOP",
    detail: "Control structure: END LOOP",
  },
  {
    label: "for each",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "for each",
    detail: "Control structure: for each",
  },
  {
    label: "FOR EACH",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "FOR EACH",
    detail: "Control structure: FOR EACH",
  },
  {
    label: "in",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "in",
    detail: "Control structure: in",
  },
  {
    label: "IN",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "IN",
    detail: "Control structure: IN",
  },
  {
    label: "true",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "true",
    detail: "Boolean value: true",
  },
  {
    label: "TRUE",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "TRUE",
    detail: "Boolean value: TRUE",
  },
  {
    label: "false",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "false",
    detail: "Boolean value: false",
  },
  {
    label: "FALSE",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "FALSE",
    detail: "Boolean value: FALSE",
  },
  {
    label: "and",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "and",
    detail: "Logical operator: and",
  },
  {
    label: "AND",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "AND",
    detail: "Logical operator: AND",
  },
  {
    label: "or",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "or",
    detail: "Logical operator: or",
  },
  {
    label: "OR",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "OR",
    detail: "Logical operator: OR",
  },
  {
    label: "not",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "not",
    detail: "Logical operator: not",
  },
  {
    label: "NOT",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "NOT",
    detail: "Logical operator: NOT",
  },
  {
    label: "define",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "define",
    detail: "Function definition: define",
  },
  {
    label: "DEFINE",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "DEFINE",
    detail: "Function definition: DEFINE",
  },
  {
    label: "parameters",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "parameters",
    detail: "Function definition: parameters",
  },
  {
    label: "PARAMETERS",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "PARAMETERS",
    detail: "Function definition: PARAMETERS",
  },
  {
    label: "end function",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "end function",
    detail: "Function definition: end function",
  },
  {
    label: "END FUNCTION",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "END FUNCTION",
    detail: "Function definition: END FUNCTION",
  },
  {
    label: "print",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "print",
    detail: "Output: print",
  },
  {
    label: "PRINT",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "PRINT",
    detail: "Output: PRINT",
  },
  {
    label: "display",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "display",
    detail: "Output: display",
  },
  {
    label: "DISPLAY",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "DISPLAY",
    detail: "Output: DISPLAY",
  },
  {
    label: "equal",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "equal",
    detail: "Comparison operator: equal",
  },
  {
    label: "EQUAL",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "EQUAL",
    detail: "Comparison operator: EQUAL",
  },
  {
    label: "greater",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "greater",
    detail: "Comparison operator: greater",
  },
  {
    label: "GREATER",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "GREATER",
    detail: "Comparison operator: GREATER",
  },
  {
    label: "less",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "less",
    detail: "Comparison operator: less",
  },
  {
    label: "LESS",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "LESS",
    detail: "Comparison operator: LESS",
  },
  {
    label: "than",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "than",
    detail: "Comparison operator: than",
  },
  {
    label: "THAN",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "THAN",
    detail: "Comparison operator: THAN",
  },
  {
    label: "up",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "up",
    detail: "Range: up",
  },
  {
    label: "UP",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "UP",
    detail: "Range: UP",
  },
  {
    label: "array",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "array",
    detail: "Data structure: array",
  },
  {
    label: "ARRAY",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "ARRAY",
    detail: "Data structure: ARRAY",
  },
  {
    label: "return",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "return",
    detail: "Keyword: return",
  },
  {
    label: "RETURN",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "RETURN",
    detail: "Keyword: RETURN",
  },
  {
    label: "values",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "values",
    detail: "Keyword: values",
  },
  {
    label: "VALUES",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "VALUES",
    detail: "Keyword: VALUES",
  },
  {
    label: "at",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "at",
    detail: "Keyword: at",
  },
  {
    label: "AT",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "AT",
    detail: "Keyword: AT",
  },
  {
    label: "of",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "of",
    detail: "Keyword: of",
  },
  {
    label: "OF",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "OF",
    detail: "Keyword: OF",
  },
  {
    label: "substring",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "substring",
    detail: "Function: substring",
  },
  {
    label: "SUBSTRING",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "SUBSTRING",
    detail: "Function: SUBSTRING",
  },
  {
    label: "length",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "length",
    detail: "Function: length",
  },
  {
    label: "LENGTH",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "LENGTH",
    detail: "Function: LENGTH",
  },
  {
    label: "character",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "character",
    detail: "Function: character",
  },
  {
    label: "CHARACTER",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "CHARACTER",
    detail: "Function: CHARACTER",
  },
  {
    label: "position",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "position",
    detail: "Function: position",
  },
  {
    label: "POSITION",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "POSITION",
    detail: "Function: POSITION",
  },
  {
    label: "while",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "while",
    detail: "Control structure: while",
  },
  {
    label: "WHILE",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "WHILE",
    detail: "Control structure: WHILE",
  },
  {
    label: "end while",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "end while",
    detail: "Control structure: end while",
  },
  {
    label: "END WHILE",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "END WHILE",
    detail: "Control structure: END WHILE",
  },
  {
    label: "end for",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "end for",
    detail: "Control structure: end for",
  },
  {
    label: "END FOR",
    kind: monaco.languages.CompletionItemKind.Keyword,
    insertText: "END FOR",
    detail: "Control structure: END FOR",
  },
];
